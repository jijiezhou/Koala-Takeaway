{"ast":null,"code":"export default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],\n      // all data\n      pageNum: 1,\n      // current page\n      pageSize: 10,\n      // number of items each page\n      categoryList: [],\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: 'please enter name',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: 'please enter price',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n    let businessId = this.user.role === 'ADMIN' ? null : this.user.id;\n    this.$request.get('category/selectAll', {\n      params: {\n        businessId: businessId\n      }\n    }).then(res => {\n      this.categoryList = res.data;\n    });\n  },\n  methods: {\n    //Add Business\n    handleAdd() {\n      this.form = {}; // clear form data\n      this.fromVisible = true; // open dialog\n    },\n\n    //Edit Business\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row)); // deep copy, set form initial value\n      this.fromVisible = true; // open dialog\n    },\n\n    //The logic triggered by the save button will trigger new or updated\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // save success\n              this.$message.success('save success');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // log error msg\n            }\n          });\n        }\n      });\n    },\n\n    //deleteById\n    del(id) {\n      this.$confirm('Are you sure to delete？', 'Confirm delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          //delete success\n          if (res.code === '200') {\n            this.$message.success('delete success');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // log error msg\n          }\n        });\n      }).catch(() => {});\n    },\n    //All row data currently selected\n    handleSelectionChange(rows) {\n      this.ids = rows.map(v => v.id);\n    },\n    //delete by batch\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('please select data');\n        return;\n      }\n      this.$confirm('Are you sure to delete by batch?', 'Confirm delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          //delete success\n          if (res.code === '200') {\n            this.$message.success('delete success');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // log error info\n          }\n        });\n      }).catch(() => {});\n    },\n    //pagination\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleFileSuccess(response, file, fileList) {\n      // Change the avatar attribute to the link of the uploaded image\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","categoryList","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","price","ids","created","load","businessId","role","id","$request","get","params","then","res","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","username","list","reset","handleCurrentChange","handleFileSuccess","file","fileList","img"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"please enter name\" style=\"width: 200px; margin-left: 10px\" v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">Query</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">Reset</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">Add</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">DeleteBatch</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"id\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"name\" label=\"name\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"price\"></el-table-column>\n        <el-table-column prop=\"discount\" label=\"discount\"></el-table-column>\n        <el-table-column prop=\"img\" label=\"image\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"descr\" label=\"description\"></el-table-column>\n        <el-table-column prop=\"origin\" label=\"origin\"></el-table-column>\n        <el-table-column prop=\"taste\" label=\"taste\"></el-table-column>\n        <el-table-column prop=\"specs\" label=\"specific\"></el-table-column>\n        <el-table-column prop=\"date\" label=\"date\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"status\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"success\" v-if=\"scope.row.status === 'available'\">availa</el-tag>\n            <el-tag type=\"warning\" v-if=\"scope.row.status === 'unavailable'\">unavailable</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"businessName\" label=\"busiNname\"></el-table-column>\n        <el-table-column prop=\"categoryName\" label=\"cateName\"></el-table-column>\n        <el-table-column label=\"operation\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">Edit</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"Business Form\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"name\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"price\" prop=\"price\">\n          <el-input v-model=\"form.price\" placeholder=\"price\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"discount\" prop=\"discount\">\n          <el-input v-model=\"form.discount\" placeholder=\"discount: 1 stands for no discount，use float\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"image\" prop=\"img\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              :on-success=\"handleFileSuccess\"\n          >\n            <el-button type=\"primary\">Upload</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"description\" prop=\"descr\">\n          <el-input v-model=\"form.descr\" placeholder=\"description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"origin\" prop=\"origin\">\n          <el-input v-model=\"form.origin\" placeholder=\"original material\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"taste\" prop=\"taste\">\n          <el-input v-model=\"form.taste\" placeholder=\"taste\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"specification\" prop=\"specs\">\n          <el-input v-model=\"form.specs\" placeholder=\"specification\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"date\" prop=\"date\">\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\n                          v-model=\"form.date\" style=\"width: 100%\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"status\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio label=\"available\"></el-radio>\n            <el-radio label=\"unavailable\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"category\" prop=\"categoryId\">\n          <el-select style=\"width: 100%\" v-model=\"form.categoryId\">\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],  // all data\n      pageNum: 1,   // current page\n      pageSize: 10,  // number of items each page\n      categoryList: [],\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [\n          {required: true, message: 'please enter name', trigger: 'blur'},\n        ],\n        price: [\n          {required: true, message: 'please enter price', trigger: 'blur'},\n        ],\n      },\n      ids: []\n    }\n  },\n  created() {\n    this.load(1)\n    let businessId = this.user.role === 'ADMIN' ? null : this.user.id\n    this.$request.get('category/selectAll', {\n      params: {\n        businessId: businessId\n      }\n    }).then(res => {\n      this.categoryList = res.data\n    })\n  },\n  methods: {\n    //Add Business\n    handleAdd() {\n      this.form = {}  // clear form data\n      this.fromVisible = true   // open dialog\n    },\n    //Edit Business\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))  // deep copy, set form initial value\n      this.fromVisible = true   // open dialog\n    },\n    //The logic triggered by the save button will trigger new or updated\n    save() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // save success\n              this.$message.success('save success')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // log error msg\n            }\n          })\n        }\n      })\n    },\n    //deleteById\n    del(id) {\n      this.$confirm('Are you sure to delete？', 'Confirm delete', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          //delete success\n          if (res.code === '200') {\n            this.$message.success('delete success')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // log error msg\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    //All row data currently selected\n    handleSelectionChange(rows) {\n      this.ids = rows.map(v => v.id)\n    },\n    //delete by batch\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('please select data')\n        return\n      }\n      this.$confirm('Are you sure to delete by batch?', 'Confirm delete', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\n          //delete success\n          if (res.code === '200') {\n            this.$message.success('delete success')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // log error info\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    //pagination\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.username = null\n      this.name = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleFileSuccess(response, file, fileList) {\n      // Change the avatar attribute to the link of the uploaded image\n      this.form.img = response.data\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AA0HA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,YAAA;MACAC,KAAA;MACAN,IAAA;MACAO,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAd,IAAA,GACA;UAAAe,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,IAAAC,UAAA,QAAAb,IAAA,CAAAc,IAAA,2BAAAd,IAAA,CAAAe,EAAA;IACA,KAAAC,QAAA,CAAAC,GAAA;MACAC,MAAA;QACAL,UAAA,EAAAA;MACA;IACA,GAAAM,IAAA,CAAAC,GAAA;MACA,KAAAxB,YAAA,GAAAwB,GAAA,CAAA5B,IAAA;IACA;EACA;EACA6B,OAAA;IACA;IACAC,UAAA;MACA,KAAAvB,IAAA;MACA,KAAAD,WAAA;IACA;;IACA;IACAyB,WAAAC,GAAA;MACA,KAAAzB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAwB,SAAA,CAAAD,GAAA;MACA,KAAA1B,WAAA;IACA;;IACA;IACA4B,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAd,QAAA;YACAe,GAAA,OAAAhC,IAAA,CAAAgB,EAAA;YACAiB,MAAA,OAAAjC,IAAA,CAAAgB,EAAA;YACAvB,IAAA,OAAAO;UACA,GAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAa,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAvB,IAAA;cACA,KAAAd,WAAA;YACA;cACA,KAAAoC,QAAA,CAAAE,KAAA,CAAAhB,GAAA,CAAAiB,GAAA;YACA;UACA;QACA;MACA;IACA;;IACA;IACAC,IAAAvB,EAAA;MACA,KAAAwB,QAAA;QAAAC,IAAA;MAAA,GAAArB,IAAA,CAAAsB,QAAA;QACA,KAAAzB,QAAA,CAAA0B,MAAA,oBAAA3B,EAAA,EAAAI,IAAA,CAAAC,GAAA;UACA;UACA,IAAAA,GAAA,CAAAa,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAvB,IAAA;UACA;YACA,KAAAsB,QAAA,CAAAE,KAAA,CAAAhB,GAAA,CAAAiB,GAAA;UACA;QACA;MACA,GAAAM,KAAA,QACA;IACA;IACA;IACAC,sBAAAC,IAAA;MACA,KAAAnC,GAAA,GAAAmC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAhC,EAAA;IACA;IACA;IACAiC,SAAA;MACA,UAAAtC,GAAA,CAAAuC,MAAA;QACA,KAAAf,QAAA,CAAAgB,OAAA;QACA;MACA;MACA,KAAAX,QAAA;QAAAC,IAAA;MAAA,GAAArB,IAAA,CAAAsB,QAAA;QACA,KAAAzB,QAAA,CAAA0B,MAAA;UAAAlD,IAAA,OAAAkB;QAAA,GAAAS,IAAA,CAAAC,GAAA;UACA;UACA,IAAAA,GAAA,CAAAa,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAvB,IAAA;UACA;YACA,KAAAsB,QAAA,CAAAE,KAAA,CAAAhB,GAAA,CAAAiB,GAAA;UACA;QACA;MACA,GAAAM,KAAA,QACA;IACA;IACA;IACA/B,KAAAlB,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAsB,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAxB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAwD,QAAA,OAAAA,QAAA;UACA5D,IAAA,OAAAA;QACA;MACA,GAAA4B,IAAA,CAAAC,GAAA;QACA,KAAA3B,SAAA,GAAA2B,GAAA,CAAA5B,IAAA,EAAA4D,IAAA;QACA,KAAAvD,KAAA,GAAAuB,GAAA,CAAA5B,IAAA,EAAAK,KAAA;MACA;IACA;IACAwD,MAAA;MACA,KAAAF,QAAA;MACA,KAAA5D,IAAA;MACA,KAAAqB,IAAA;IACA;IACA0C,oBAAA5D,OAAA;MACA,KAAAkB,IAAA,CAAAlB,OAAA;IACA;IACA6D,kBAAAd,QAAA,EAAAe,IAAA,EAAAC,QAAA;MACA;MACA,KAAA1D,IAAA,CAAA2D,GAAA,GAAAjB,QAAA,CAAAjD,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}