{"ast":null,"code":"export default {\n  name: \"BusinessPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {},\n  methods: {\n    update() {\n      // Save current user information to database\n      this.$request.put('/business/update', this.user).then(res => {\n        if (res.code === '200') {\n          // update success\n          this.$message.success('update success');\n\n          // Update user information in browser cache\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          //Trigger data update of parent\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // Replace the user's avatar attribute with the link to the uploaded image\n      this.$set(this.user, 'avatar', response.data);\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","created","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","handleAvatarSuccess","response","file","fileList","$set"],"sources":["src/views/manager/BusinessPerson.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 50%\">\n      <el-form :model=\"user\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <div style=\"margin: 15px; text-align: center\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </div>\n        <el-form-item label=\"status\" prop=\"status\">\n          <el-select style=\"width: 100%\" v-model=\"user.status\">\n            <el-option v-for=\"item in ['pending', 'pass', 'reject']\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"username\" prop=\"username\">\n          <el-input v-model=\"user.username\" placeholder=\"username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"name\" prop=\"name\">\n          <el-input v-model=\"user.name\" placeholder=\"name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"password\" prop=\"password\">\n          <el-input v-model=\"user.password\" placeholder=\"password\" show-password></el-input>\n        </el-form-item>\n        <el-form-item label=\"phone\" prop=\"phone\">\n          <el-input v-model=\"user.phone\" placeholder=\"phone\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"info\" prop=\"info\">\n          <el-input v-model=\"user.info\" placeholder=\"info\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"address\" prop=\"address\">\n          <el-input v-model=\"user.address\" placeholder=\"address\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"timeRange\" prop=\"timeRange\">\n          <el-input v-model=\"user.timeRange\" placeholder=\"time range\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"type\" prop=\"type\">\n          <el-select style=\"width: 100%\" v-model=\"user.type\">\n            <el-option v-for=\"item in ['milk tea', 'healthy salad', 'burger fries', 'special offer']\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"license\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleLicenseSuccess\"\n          >\n            <el-button type=\"primary\">Upload License</el-button>\n          </el-upload>\n        </el-form-item>\n        <div style=\"text-align: center; margin-bottom: 20px\">\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BusinessPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    update() {\n      // Save current user information to database\n      this.$request.put('/business/update', this.user).then(res => {\n        if (res.code === '200') {\n          // update success\n          this.$message.success('update success')\n\n          // Update user information in browser cache\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\n\n          //Trigger data update of parent\n          this.$emit('update:user')\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // Replace the user's avatar attribute with the link to the uploaded image\n      this.$set(this.user, 'avatar', response.data)\n    },\n  }\n}\n</script>\n\n<style scoped>\n/deep/.el-form-item__label {\n  font-weight: bold;\n}\n/deep/.el-upload {\n  border-radius: 50%;\n}\n/deep/.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  border-radius: 50%;\n}\n/deep/.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n  border-radius: 50%;\n}\n.avatar {\n  width: 120px;\n  height: 120px;\n  display: block;\n  border-radius: 50%;\n}\n</style>\n"],"mappings":"AAkEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,OAAA;MACA;MACA,KAAAC,QAAA,CAAAC,GAAA,0BAAAT,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACAX,YAAA,CAAAY,OAAA,YAAAd,IAAA,CAAAe,SAAA,MAAAhB,IAAA;;UAEA;UACA,KAAAiB,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IACAC,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAAxB,IAAA,YAAAqB,QAAA,CAAAtB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}